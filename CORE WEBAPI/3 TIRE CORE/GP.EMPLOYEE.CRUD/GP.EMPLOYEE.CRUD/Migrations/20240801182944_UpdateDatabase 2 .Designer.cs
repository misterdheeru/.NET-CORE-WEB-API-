// <auto-generated />
using GP.EMPLOYEE.CRUD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GP.EMPLOYEE.CRUD.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240801182944_UpdateDatabase 2 ")]
    partial class UpdateDatabase2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GP.EMPLOYEE.CRUD.Models.Company", b =>
                {
                    b.Property<int>("companyID")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CNAME");

                    b.HasKey("companyID");

                    b.ToTable("company");
                });

            modelBuilder.Entity("GP.EMPLOYEE.CRUD.Models.Employees", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Empno");

                    b.Property<int>("companyID")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmpEmal");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmpName");

                    b.Property<int>("posID")
                        .HasColumnType("int")
                        .HasColumnName("POSID");

                    b.Property<double>("sal")
                        .HasColumnType("float")
                        .HasColumnName("EmpSal");

                    b.HasKey("Id");

                    b.HasIndex("companyID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GP.EMPLOYEE.CRUD.Models.Positions", b =>
                {
                    b.Property<int>("posID")
                        .HasColumnType("int")
                        .HasColumnName("POSID");

                    b.Property<string>("posName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POSNAME");

                    b.HasKey("posID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("GP.EMPLOYEE.CRUD.Models.Employees", b =>
                {
                    b.HasOne("GP.EMPLOYEE.CRUD.Models.Positions", "Positions")
                        .WithMany("employees")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP.EMPLOYEE.CRUD.Models.Company", "company")
                        .WithMany("employees")
                        .HasForeignKey("companyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Positions");

                    b.Navigation("company");
                });

            modelBuilder.Entity("GP.EMPLOYEE.CRUD.Models.Company", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("GP.EMPLOYEE.CRUD.Models.Positions", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
